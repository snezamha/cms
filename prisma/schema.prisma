generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName     String?
  phoneNumber  String   @unique
  otpCode      String
  otpExpiresIn DateTime
  role         UserRole @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Bid          Bid[]
  Order        Order[]
}

model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String     @unique
  type      String
  parentId  String?    @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  parent    Category?  @relation("CategoryToCategory", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Category[] @relation("CategoryToCategory")
  products  Product[]
}

model Product {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  slug            String?
  description     String?
  price           String
  categoryId      String?     @db.ObjectId
  category        Category?   @relation(fields: [categoryId], references: [id])
  images          Json?
  countInStock    String
  discountPercent String
  isInAuction     Boolean
  auctionIds      String[]    @db.ObjectId
  status          Boolean     @default(true)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  Bid             Bid[]
  OrderItem       OrderItem[]

  @@index([name])
}

model Auction {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  productIds String[] @db.ObjectId
  endAt      DateTime
  status     Boolean  @default(false)
  Bid        Bid[]
}

model Bid {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  amount    Float
  placedAt  DateTime @default(now())
  userId    String   @db.ObjectId
  auctionId String   @db.ObjectId
  productId String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  auction   Auction  @relation(fields: [auctionId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

enum TRANSACTION_STATUS {
  PENDING
  PAID
  CANCELED
}

model Order {
  id         String             @id @default(auto()) @map("_id") @db.ObjectId
  totalPrice String
  token      String
  status     TRANSACTION_STATUS
  userId     String             @db.ObjectId
  User       User               @relation(fields: [userId], references: [id])
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  orderItems OrderItem[]

  @@index([userId])
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}
